package cn.ziweiwenxuezazhi.controller;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;

import cn.ziweiwenxuezazhi.entity.Video;
import cn.ziweiwenxuezazhi.service.VideoService;

@Controller
public class VideoController {

	// 注入服务类
	@Autowired
	private VideoService service;

	/**
	 * 从数据库查看所有视频信息
	 * 
	 * @param page
	 * @return
	 */
	@RequestMapping(value = "/video", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getAll(int page) {
		Map<String, Object> map = new HashMap<String, Object>();
		// 使用PageHelper进行分页查询
		Page<Object> startPage = PageHelper.startPage(page, 10);
		// 查询
		List<Video> allVideo = service.getAllVideo();
		System.out.println(allVideo);
		// 获取总的数据量
		long total = startPage.getTotal();
		// 获取第几页
		int pageNum = startPage.getPageNum();
		// 获取总页数
		int pages = startPage.getPages();
		// 将信息put到集合中，返回给前台
		map.put("video", allVideo);
		map.put("total", total);
		map.put("pageNum", pageNum);
		map.put("pages", pages);
		return map;
	}

	/**
	 * 上传视频，并将视频信息存入数据库
	 * 
	 * @param videofile
	 * @param video
	 * @param request
	 * @return
	 * @throws IllegalStateException
	 * @throws IOException
	 */
	@RequestMapping(value = "/video/new", method = RequestMethod.POST)
	@ResponseBody
	public boolean uploadVideo(MultipartFile videofile, Video video, HttpServletRequest request)
			throws IllegalStateException, IOException {
		// 获取文件名称
		String string = videofile.getOriginalFilename();
		// 设置将要保存的文件名称
		String fileName = video.getTheme() + "_" + System.currentTimeMillis() + string.substring(string.indexOf("."));

		// 获取本地磁盘路径
		String realPath = request.getServletContext().getRealPath("video");
		video.setPath("video" + File.separator + fileName);
		boolean addVideo = service.addVideo(video);

		// 如果信息成功存入数据库，则将文件上传至本地磁盘
		if (addVideo) {
			// 创建文件夹，判断文件夹是否存在，如果不存在则创建文件夹
			File file = new File(realPath + File.separator + fileName);
			if (!file.exists()) {
				file.mkdirs();
			}
			// 将MultipartFile文件转换到本地文件
			videofile.transferTo(file);
		}

		//返回添加 情况
		return addVideo;

	}

	@RequestMapping(value = "/video/delete", method = RequestMethod.POST)
	@ResponseBody
	public boolean deleteVideo(int id) {
		return service.deleteVideoById(id);
	}
}
